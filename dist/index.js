/* yocto-daemon - Async tool to emulate an app like a system daemon - V1.1.8 */
function DaemonWrapper(a){this.DEFAULT_TASK_PRIORITY=1,this.logger=a,this.queue={},this.populateFn={},this.execFn={},this.thread=10,this.wait=10,this.errorRetry=10,this.nbError=0,this.pauseInterval=!1}var async=require("async"),_=require("lodash"),sleep=require("sleep"),logger=require("yocto-logger"),utils=require("yocto-utils"),Q=require("q");DaemonWrapper.prototype.retry=function(a){var b=this.errorRetry;return _.isNumber(a)&&!_.isNaN(a)&&(a>=0?(this.errorRetry=a,this.logger.info(["[ DaemonWrapper.retry ] - retry changed from [",b,"] to [",this.errorRetry,"]"].join(" "))):this.logger.warning(["[ DaemonWrapper.retry ] - retry cannot <= 0.","Keep to default current value :",this.errorRetry].join(" "))),_.isNumber(this.errorRetry)&&!_.isNaN(this.errorRetry)},DaemonWrapper.prototype.delay=function(a){var b=this.wait;return _.isNumber(a)&&!_.isNaN(a)&&(a>=0?(this.wait=a,this.logger.info(["[ DaemonWrapper.delay ] - delay changed from [",b,"] to [",this.wait,"]"].join(" "))):this.logger.warning(["[ DaemonWrapper.delay ] - delay cannot <= 0.","Keep to default current value :",this.wait].join(" "))),_.isNumber(this.wait)&&!_.isNaN(this.wait)},DaemonWrapper.prototype.use=function(a,b,c){return _.isFunction(a)&&_.isObject(a())?(_.isBoolean(b)&&b?this.execFn={method:a,context:c||this}:this.populateFn={method:a,context:c||this},!0):(this.logger.error(["[ DaemonWrapper.use ] - Given data is not function","or not a valid promise for :",b?"execFn":"populateFn"].join(" ")),!1)},DaemonWrapper.prototype.createQueue=function(){return this.isReady(!0)?(this.logger.info("[ DaemonWrapper.createQueue ] - Creating Queue ..."),this.logger.info(["[ DaemonWrapper.createQueue ] - Queue worker concurrency is set to :",this.thread].join(" ")),this.queue=async.priorityQueue(function(a,b){this.logger.info("[ Queue.run ] - Receiving new data. process it !"),this.logger.debug(["[ Queue.run ] - Data is : ",utils.obj.inspect(a)].join(" ")),this.execFn.method.call(this.execFn.context,a).then(function(c){this.logger.info("[ Queue.run ] - Success response given. Calling given callback"),b({success:!0,error:!1,message:c,data:a})}.bind(this),function(c){this.logger.error(["[ Queue.run ] - Error response given. Error is :",c,"Calling given callback"].join(" ")),b({success:!1,error:!0,message:c,data:a})}.bind(this))}.bind(this),this.thread),this.queue.drain=function(){this.logger.info(["[ Queue.drain ] - Pending work is complete. Sleeping",this.wait,"seconds before next tick ..."].join(" ")),sleep.sleep(this.wait),this.isReady(!0)?this.chainPopulate():(this.logger.error([" [ Queue.drain ] - A problem occured.","Current queue process seems to be not ready yet"].join(" ")),this.stop())}.bind(this),this.queue.saturated=function(){this.logger.warning("[ Queue.saturated ] - Queue length hits the concurrency limit."),this.logger.info(["[ Queue.saturated ] - Changing Queue length concurrency","to an higher value."].join(" ")),this.logger.info(["[ Queue.saturated ] - Concurrency limit changing from [",this.queue.concurrency,"] to [",2*this.queue.concurrency,"]"].join(" ")),this.queue.concurrency=2*this.queue.concurrency}.bind(this),_.isObject(this.queue)&&!_.isEmpty(this.queue)):!1},DaemonWrapper.prototype.chainPopulate=function(){return this.isReady(!0)?(this.populate().then(function(a){this.logger.info(["[ DaemonWrapper.chainPopulate ] - Populate function succeed.",_.isEmpty(a.data)?"Nothing to process.":"","Waiting draining ..."].join(" ")),_.isEmpty(a.data)&&this.queue.drain()}.bind(this),function(a){return this.nbError+=1,this.logger.error(["[ DaemonWrapper.chainPopulate ] - An error occured during populate.","Error is :",utils.obj.inspect(a)].join(" ")),this.nbError<this.errorRetry?(this.logger.error(["[ DaemonWrapper.chainPopulate ] - Waiting",this.wait,"seconds before next tick ..."].join(" ")),sleep.sleep(this.wait),this.chainPopulate(),void 0):(this.logger.error(["[ DaemonWrapper.chainPopulate ] - Too many errors occured.","Retry limit was reached."].join(" ")),this.stop())}.bind(this)),!0):(this.logger.error([" [ DaemonWrapper.chainPopulate ] - A problem occured.","Current queue process seems to be not ready yet"].join(" ")),this.stop())},DaemonWrapper.prototype.populate=function(){var a=Q.defer(),b=["[ DaemonWrapper.populate ] - A problem occured.","Current queue process seems to be not ready yet.","Cannot populate."].join(" ");return this.isReady(!0)?this.populateFn.method.apply(this.populateFn.context).then(function(b){this.logger.info(["[ DaemonWrapper.populate ] - success response given.","Try to normalize data before push into queue"].join(" "));var c={data:b,priority:this.DEFAULT_TASK_PRIORITY,callback:function(){this.logger.info(["[ Queue.run.callback ] - default callback was called.","Nothing to do here ...","Prefer defined your own callback ..."].join(" "))}.bind(this)};_.isObject(b)&&_.has(b,"data")&&_.has(b,"priority")&&_.isNumber(b.priority)&&_.has(b,"callback")&&_.isFunction(b.callback)&&(this.logger.debug(["[ DaemonWrapper.populate ] - Given populate function has","return a valid structure. normalize it"].join(" ")),c=b),this.logger.debug(["[ DaemonWrapper.populate ] - normalize data is :",utils.obj.inspect(c)].join(" ")),this.logger.info(["[ DaemonWrapper.populate ] - prepare to adding",c.data.length,"new data on queue."].join(" ")),_.isArray(c.data)&&!_.isEmpty(c.data)?_.each(c.data,function(b,d){var e=c.priority,f=c.callback,g=b;_.isObject(b)&&_.has(b,"data")&&_.has(b,"priority")&&_.isNumber(b.priority)&&_.has(b,"callback")&&_.isFunction(b.callback)&&(this.logger.debug([["[ DaemonWrapper.populate.item[",d,"]"].join(""),"] - return a valid structure. normalize it"].join(" ")),g=b.data,e=b.priority,f=b.callback),this.add(g,e,f),_.last(c.data)===b&&a.resolve(c)}.bind(this)):(_.isEmpty(c.data)||this.add(c.data,c.priority,c.callback),a.resolve(c))}.bind(this))["catch"](function(c){b=["[ DaemonWrapper.populate ] -","Given populate function has broadcasted an error.","Cannot populate."].join(" "),this.logger.error([b,"Error is :",utils.obj.inspect(c)].join(" ")),a.reject(b)}.bind(this)):a.reject(b),a.promise},DaemonWrapper.prototype.add=function(a,b,c){if(this.isReady(!0)){if(this.logger.info(["[ DaemonWrapper.add ] - Try to add item [",this.queue.length()+1,"] into queue with priority [",b,"]"].join(" ")),!_.isUndefined(a)&&!_.isNull(a)&&_.isNumber(b)&&b>=1&&_.isFunction(c))return this.queue.push(a,b,c),!0;this.logger.warning("[ DaemonWrapper.add ] - Invalid data given. Adding was omit")}return!1},DaemonWrapper.prototype.moreWorkers=function(a){return a=_.isNumber(a)&&a>0?a:10,this.changeWorkersConcurrency(a,!0)},DaemonWrapper.prototype.lessWorkers=function(a){return a=_.isNumber(a)&&a>0?a:10,this.changeWorkersConcurrency(a,!1)},DaemonWrapper.prototype.changeWorkersConcurrency=function(a,b){var c=this.queue.concurrency||this.thread,d=_.isUndefined(b)||_.isNull(b)||!_.isNumber(a)||_.isNaN(a)||!b?(this.queue.concurrency||this.thread)-a:(this.queue.concurrency||this.thread)+a;return 0>d&&(this.logger.warning(["[ DaemonWrapper.changeConcurrency ] - Change workers failed.","Minimum of workers must be >= 1 .","New wanted value is [",d,"], app changed it to minimum value"].join(" ")),d=1),_.isUndefined(this.queue.concurrency)?this.thread=d:this.queue.concurrency=d,this.logger.info(["[ DaemonWrapper.changeConcurrency ] - Workers concurrency change from [",c,"] to [",this.queue.concurrency||this.thread,"]"].join(" ")),_.isNumber(this.queue.concurrency||this.thread)&&(this.queue.concurrency||this.thread)>=1},DaemonWrapper.prototype.isReady=function(a){return _.isBoolean(a)&&a&&(_.isFunction(this.populateFn.method)&&_.isObject(this.populateFn.method.apply(this.populateFn.context))||this.logger.error(["[ DaemonWrapper.isReady ] - Wrapper is not ready.","populate Function is invalid.",'Please call "use" function',"before start your app"].join(" ")),_.isFunction(this.execFn.method)&&_.isObject(this.execFn.method.apply(this.execFn.context))||this.logger.error(["[ DaemonWrapper.isReady ] - Wrapper is not ready.","exec Function is invalid.",'Please call "use" function',"before start your app"].join(" "))),_.isFunction(this.populateFn.method)&&_.isObject(this.populateFn.method.apply(this.populateFn.context))&&_.isFunction(this.execFn.method)&&_.isObject(this.execFn.method.apply(this.execFn.context))},DaemonWrapper.prototype.stop=function(){return this.logger.info("[ DaemonWrapper.stop ] - Stop action was request."),this.kill(!0)},DaemonWrapper.prototype.start=function(){return this.isReady(!0)&&(this.createQueue()?this.chainPopulate():(this.logger.error("[ DaemonWrapper.start ] - Cannot createQueue. Cannot continue."),this.stop())),!0},DaemonWrapper.prototype.pause=function(){return this.isReady(!0)?(this.logger.info("[ DaemonWrapper.pause ] - Pausing Queue ..."),this.queue.pause(),this.pauseInterval=setInterval(function(){},1e3),this.queue.paused):this.stop()},DaemonWrapper.prototype.resume=function(){return this.isReady(!0)?(this.logger.info("[ DaemonWrapper.resume ] - Resume Queue ..."),_.isBoolean(this.pauseInterval)||_.isNull(this.pauseInterval)||_.isUndefined(this.pauseInterval)||(this.logger.info("[ DaemonWrapper.resume ] - Cleaning pause interval"),clearInterval(this.pauseInterval)),this.queue.resume(),this.queue.paused===!1):this.stop()},DaemonWrapper.prototype.clean=function(){return this.isReady(!0)?(this.logger.info("[ DaemonWrapper.delete ] - Starting Delete Queue ..."),this.pause()?(this.queue.tasks=[],0===this.queue.length()?(this.logger.info("[ DaemonWrapper.delete ] - Delete Queue Complete ..."),this.resume()):this.logger.warning("[ DaemonWrapper.delete ] - Cannot Delete Queue.")):this.logger.warning("[ DaemonWrapper.delete ] - Cannot Delete Queue. pause() failed"),0===this.queue.length()):this.stop()},DaemonWrapper.prototype.kill=function(a){return this.logger.info("[ DaemonWrapper.kill ] - Cleaning Queue ..."),this.queue.kill(),_.isBoolean(a)&&a&&(this.logger.info("[ DaemonWrapper.kill ] - Exiting ..."),process.exit(1)),!0},module.exports=function(a){return(_.isUndefined(a)||_.isNull(a))&&(logger.warning("[ DaemonWrapper.constructor ] - Invalid logger given. Use internal logger"),a=logger),new DaemonWrapper(a)};